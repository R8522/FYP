from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
import joblib
import librosa
import numpy as np

# Assume you have a list of audio files and labels
audio_files = [...]  # List of file paths to the audio data
labels = [...]  # Corresponding labels (sick or healthy)

def extract_features(file_path):
    # Extract features from an audio file
    y, sr = librosa.load(file_path)
    features = librosa.feature.mfcc(y=y, sr=sr)
    return np.mean(features, axis=1)  # Mean of MFCCs

X = [extract_features(file) for file in audio_files]
y = labels

# Encode the labels
encoder = LabelEncoder()
y_encoded = encoder.fit_transform(y)

# Split into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y_encoded, test_size=0.2)

# Train a model (Random Forest in this case)
clf = RandomForestClassifier()
clf.fit(X_train, y_train)

# Save the model and encoder
joblib.dump(clf, 'chicken_health_model.pkl')
joblib.dump(encoder, 'label_encoder.pkl')
